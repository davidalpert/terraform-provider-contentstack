# https://taskfile.dev

version: '3'

vars:
  PROJECT_NAME: terraform-provider-contentstack
  CURRENT_VERSION:
    sh: sbot get version
  VERSION: '{{ .NEXT_VERSION | default .CURRENT_VERSION }}'
  NEXT_PATCH_VERSION:
    sh: sbot predict version --mode patch

tasks:
  default:
    deps:
      - help
    silent: true

  ci:
    desc: CI task; cleans, run tests, and builds
    deps:
      - build

  gen:
    desc: run code-generation
    run: once
    cmds:
      - go generate main.go

  test:
    desc: run unit tests
    run: once
    deps:
      - gen
    cmds:
      - go test -v ./...

  build:
    desc: build
    run: once
    deps:
      - gen
    cmds:
      - go build -o ./bin/terraform-provider-contentstack_v{{ .VERSION }} .

  build-next:
    desc: build next patch version
    run: once
    deps:
      - gen
    cmds:
      - go build -o ./bin/terraform-provider-contentstack_v{{ .NEXT_PATCH_VERSION }} .

  changelog:
    desc: generate/update CHANGELOG.md
    cmds:
      - git-chglog --output CHANGELOG.md

  preview-release-notes:
    desc: preview release notes (generates RELEASE_NOTES.md)
    cmds:
      - git-chglog --output RELEASE_NOTES.md --template .chglog/RELEASE_NOTES.tpl.md "v{{ .VERSION }}"

  release:
    cmds:
      - task: gen
        vars:
          VERSION: "{{ .NEXT_VERSION }}"
      - task: test
      - git add -f internal/version/detail.go
      - git-chglog --next-tag v{{ .NEXT_VERSION }} --output CHANGELOG.md
      - git add -f CHANGELOG.md
      - git commit --message "release notes for v{{ .NEXT_VERSION }}"
      - sbot release version --mode {{ .BUMP_TYPE }}
      - git show --no-patch --format=short v{{ .NEXT_VERSION }}
    preconditions:
      - sh: git diff-files --quiet
        msg: There are unstaged changes; clean your working directory before releasing.
      - sh: git diff-index --quiet --cached HEAD --
        msg: There are uncomitted changes; clean your working directory before releasing.
    vars:
      NEXT_VERSION:
        sh: sbot predict version --mode {{ .BUMP_TYPE }}
    
  release-patch:
    desc: release a patch update
    cmds:
      - task: release
        vars:
          BUMP_TYPE: patch

  release-minor:
    desc: release a minor update
    cmds:
      - task: release
        vars:
          BUMP_TYPE: minor

  release-major:
    desc: release a major update
    cmds:
      - task: release
        vars:
          BUMP_TYPE: major

  help:
    desc: list targets
    cmds:
      - echo "{{ .PROJECT_NAME}} v{{ .VERSION }}"
      - echo ""
      - task --list
    silent: true

